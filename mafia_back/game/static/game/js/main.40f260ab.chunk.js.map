{"version":3,"sources":["images/player_hidden.png","components/layout/Header.jsx","components/layout/Footer.jsx","components/pages/Index.jsx","components/MaterializeField.jsx","components/pages/Login.jsx","components/pages/Register.jsx","components/pages/Profile.jsx","components/GameCard.jsx","components/pages/Games.jsx","components/elements/PlayerCard.jsx","components/pages/Game.jsx","components/pages/CreateGame.jsx","Router.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_this","this","auth","Boolean","localStorage","getItem","react_default","a","createElement","react","react_router_dom","to","href","onClick","e","removeItem","props","history","push","className","data-target","id","Component","withRouter","Footer","Index","MaterializeField","prefix","formik_esm","type","name","htmlFor","title","component","TOKEN_AUTH","gql","_templateObject","SigninSchema","Yup","shape","username","min","max","required","password","Login","react_apollo_esm","mutation","update","cache","_ref","token","data","tokenAuth","setItem","_ref2","initialValues","validationSchema","onSubmit","values","actions","variables","render","_ref3","errors","status","touched","isSubmitting","components_MaterializeField","disabled","CREATE_USER","Register_templateObject","SignupSchema","email","passwordConfirm","oneOf","Register","createUser","user","console","log","STATISTICS","Profile_templateObject","Profile","query","loading","error","concat","message","statistic","gamesCount","gamesWon","gamesLost","asMafia","asCitizen","asSheriff","asDoctor","GET_USER","GameCard_templateObject","DELETE_GAME","_templateObject2","GameCard","state","undefined","fetch","setUserId","setState","_this2","obj","mode","extended","extendedPlayers","peopleAsDoctor","peopleAsSheriff","delGame","creator","deleteGame","refetch","players","peopleAsMafia","dist_default","createdAt","client","then","d","me","GAMES","Games_templateObject","Games","q","first","skip","page","setQuery","nextPage","prevPage","games","map","idx","key","GameCard_GameCard","videoStyle","maxWidth","cardContentsStyle","minHeight","PlayerCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","videoRef","React","createRef","checkPlayerButtonHidden","killPlayerButtonHidden","voteForPlayerButtonHidden","style","playerName","card_id","ref","poster","player_hidden_image","autoPlay","Game_templateObject","rowStyle","marginBottom","GET_MY_ID_QUERY","Game_templateObject2","Game","isLoading","gameState","mutationHasDone","playerNames","playerIds","mafias","socket","gameId","match","params","mediaConstraints","audio","video","peerConnections","videoHandlePlayerJoinedMsg","msg","videoCreatePeerConnection","player_id","navigator","mediaDevices","getUserMedia","localStream","getTracks","forEach","track","addTrack","catch","videoHandleGetUserMediaError","videoHandlePlayerDisconnectedMsg","videoEndVideoStreaming","videoHandleVideoOfferMsg","onnegotiationneeded","desc","RTCSessionDescription","sdp","setRemoteDescription","stream","createAnswer","answer","setLocalDescription","videoSendToServer","game_id","playerId","target_id","localDescription","videoHandleVideoAnswerMsg","videoHandleError","videoHandleNewICECandidateMsg","candidate","RTCIceCandidate","addIceCandidate","targetId","peerConnection","RTCPeerConnection","iceServers","urls","onicecandidate","event","videoHandleICECandidateEvent","ontrack","videoHandleTrackEvent","videoHandleNegotiationNeededEvent","createOffer","offer","document","getElementById","srcObject","streams","playerVideo","stop","close","signalingSocket","send","JSON","stringify","alert","testGetPeers","playerCardRefs","i","WebSocket","addEventListener","parse","parseInt","cardRefs","current","muted","nextProps","nextState","nextContext","readyState","OPEN","onclose","defaultNamesArray","loaders","ClimbingBoxLoader","BarLoader","BeatLoader","BounceLoader","CircleLoader","ClipLoader","DotLoader","FadeLoader","GridLoader","HashLoader","MoonLoader","PacmanLoader","PropagateLoader","PulseLoader","ReactSpinners","RingLoader","RiseLoader","RotateLoader","ScaleLoader","SyncLoader","randomLoader","Math","floor","abs","random","length","createGamePlayer","gamePlayer","onopen","ev","onmessage","players_id","defineProperty","PlayerCard_PlayerCard","select","player","option","selectedIndex","value","result","player_index","is_mafia","mafia_index","display","justifyContent","size","sizeUnit","color","CREATE_GAME","CreateGame_templateObject","GET_CARD_SETS","CreateGame_templateObject2","GameSchema","cardSet","notOneOf","CreateGame","cardSets","setCardSets","changeExtended","elems","querySelectorAll","M","FormSelect","init","createGame","game","handleChange","handleSubmit","handleBlur","checked","onChange","onBlur","toConsumableArray","filter","Router","react_router","exact","path","App","layout_Header","src_Router","Footer_Footer","__webpack_exports__","src_client","httpLink","createHttpLink","uri","credentials","authMiddleware","ApolloLink","operation","forward","setContext","headers","authorization","ApolloClient","link","InMemoryCache","fetchOptions","app","src_App_0","ReactDOM"],"mappings":"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","file":"static/js/main.40f260ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player_hidden.b61c0d0d.png\";","import React, { Component, Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const isAuthenticated = Boolean(localStorage.getItem('token'))\r\n    const auth = \r\n      isAuthenticated ? \r\n      (\r\n        <Fragment>\r\n          <li><NavLink to=\"profile\">Profile</NavLink></li>\r\n          <li><NavLink to=\"games\">Games</NavLink></li>\r\n          <li><a href=\"#\" onClick={(e) => {localStorage.removeItem('token'); this.props.history.push('/')}}>Logout</a></li>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <li><NavLink to=\"login\">Login</NavLink></li>\r\n          <li><NavLink to=\"reg\">Register</NavLink></li>\r\n        </Fragment>\r\n      )\r\n    return (\r\n      <Fragment>\r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n            <NavLink className=\"brand-logo\" to=\"/\">Mafia</NavLink>\r\n            <a href=\"#!\" data-target=\"mobile\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n            <ul className=\"right hide-on-med-and-down\">\r\n              {auth}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <ul className=\"sidenav\" id=\"mobile\">\r\n          {auth}\r\n        </ul>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        Hello from materialize-css\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Field, ErrorMessage } from 'formik'\r\n\r\nconst MaterializeField = props => {\r\n  const prefix = props.prefix ? (\r\n    <i className=\"material-icons prefix\">{props.prefix}</i>\r\n  ) : (\r\n    <Fragment></Fragment>\r\n  )\r\n  return (\r\n    <div className=\"input-field\">\r\n      {prefix}\r\n      <Field type={props.type} name={props.name} />\r\n      <label htmlFor={props.name}>{props.title}</label>\r\n      <ErrorMessage name={props.name} component={props.component} />\r\n    </div>\r\n  )\r\n}\r\n\r\nMaterializeField.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  component: PropTypes.string.isRequired,\r\n  prefix: PropTypes.string\r\n}\r\n\r\nexport default MaterializeField\r\n","import React, { Component } from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport gql from 'graphql-tag'\r\nimport { Mutation } from 'react-apollo'\r\nimport * as Yup from 'yup'\r\n\r\nimport MaterializeField from '../MaterializeField'\r\n\r\nconst TOKEN_AUTH = gql`\r\nmutation TokenAuth($username: String!, $password: String!) {\r\n  tokenAuth(username: $username, password: $password) {\r\n    token\r\n  }\r\n}`\r\n\r\nconst SigninSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(4, 'Too short')\r\n    .max(50, 'Too long')\r\n    .required('Required'),\r\n  password: Yup.string()\r\n    .required('Password required'),\r\n})\r\n\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"col s8 offset-s2\">\r\n          <Mutation \r\n            mutation={TOKEN_AUTH}\r\n            update={(cache, { data: { tokenAuth } }) => {\r\n              const { token } = tokenAuth\r\n              localStorage.setItem('token', token)\r\n              this.props.history.push('/')\r\n            }}\r\n          >\r\n            {(tokenAuth, { data }) => (\r\n              <Formik\r\n                initialValues={{username: '', password: ''}}\r\n                validationSchema={SigninSchema}\r\n                onSubmit={(values, actions) => {\r\n                  const {username, password} = values\r\n                  tokenAuth({variables: {username, password}})\r\n                }}\r\n                render={({ errors, status, touched, isSubmitting }) => (\r\n                  <Form>\r\n                    <div className=\"row\">\r\n                      <div className=\"col s8 offset-s2\">\r\n                        <div className=\"row\">\r\n                          <MaterializeField type=\"text\" name=\"username\" component=\"p\" title=\"Username\" />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <MaterializeField type=\"password\" name=\"password\" component=\"p\" title=\"Password\" />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn\" disabled={isSubmitting}>Submit</button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              />\r\n            )}\r\n          </Mutation>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport gql from 'graphql-tag'\r\nimport { Mutation } from 'react-apollo'\r\nimport * as Yup from 'yup'\r\n\r\nimport MaterializeField from '../MaterializeField'\r\n\r\nconst CREATE_USER = gql`\r\nmutation CreateUser($username: String!, $email: String!, $password: String!) {\r\n  createUser(username: $username, email: $email, password: $password) {\r\n    user {\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(4, 'Too short')\r\n    .max(50, 'Too long')\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Invalid email')\r\n    .required('Required'),\r\n  password: Yup.string()\r\n    .required('Password required'),\r\n  passwordConfirm: Yup.string()\r\n    .oneOf([Yup.ref('password'), ], 'Passwords must match')\r\n    .required('Required')\r\n})\r\n\r\nexport default class Register extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"col s8 offset-s2\">\r\n        <Mutation \r\n            mutation={CREATE_USER}\r\n            update={(cache, { data: { createUser: { user: { id } } } }) => {\r\n              console.log(id)\r\n              this.props.history.push('/login')\r\n            }}\r\n          >\r\n            {(createUser, { data }) => (\r\n              <Formik\r\n                initialValues={{username: '', email: '', password: '', passwordConfirm: ''}}\r\n                validationSchema={SignupSchema}\r\n                onSubmit={(values, actions) => {\r\n                  const {username, email, password} = values\r\n                  createUser({variables: {username, email, password}})\r\n                }}\r\n                render={({ errors, status, touched, isSubmitting }) => (\r\n                  <Form>\r\n                    <div className=\"row\">\r\n                      <div className=\"col s8 offset-s2\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col s6\">\r\n                            <MaterializeField type=\"text\" name=\"username\" component=\"p\" title=\"Username\" />\r\n                          </div>\r\n                          <div className=\"col s6\">\r\n                            <MaterializeField type=\"text\" name=\"email\" component=\"p\" title=\"Email\" />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col s6\">\r\n                            <MaterializeField type=\"password\" name=\"password\" component=\"p\" title=\"Password\" />\r\n                          </div>\r\n                          <div className=\"col s6\">\r\n                            <MaterializeField type=\"password\" name=\"passwordConfirm\" component=\"p\" title=\"Password Confirm\" />\r\n                          </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn\" disabled={isSubmitting}>Submit</button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              />\r\n            )}\r\n          </Mutation>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\n\r\nconst STATISTICS = gql`\r\nquery {\r\n  statistic {\r\n    user {\r\n      username\r\n    }\r\n    gamesCount\r\n    gamesWon\r\n    gamesLost\r\n    asMafia\r\n    asCitizen\r\n    asSheriff\r\n    asDoctor\r\n  }\r\n}`\r\n\r\nexport default class Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s8 offset-s2\">\r\n          <Query query={STATISTICS}>\r\n            {({ loading, error, data }) => {\r\n              if (loading) return (\r\n                <div className=\"progress\">\r\n                  <div className=\"indeterminate\"></div>\r\n                </div>\r\n              )\r\n              if (error) return (\r\n                `Error! ${error.message}`\r\n              )\r\n\r\n              data = data.statistic\r\n\r\n              return (\r\n                <div className=\"card\">\r\n                  <div className=\"card-content\">\r\n                    <span className=\"card-title\"><b>{data.user.username}</b></span>\r\n                    <ul className=\"collection\">\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.gamesCount}</span>Games</li>\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.gamesWon}</span>Wins</li>\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.gamesLost}</span>Loses</li>\r\n                      <li className=\"collection-item\"><center><b>Classic</b></center></li>\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.asMafia}</span>Games as Mafia</li>\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.asCitizen}</span>Games as Citizen</li>\r\n                      <li className=\"collection-item\"><center><b>Extended</b></center></li>\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.asSheriff}</span>Games as Sheriff</li>\r\n                      <li className=\"collection-item\"><span className=\"badge\">{data.asDoctor}</span>Games as Doctor</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }}\r\n          </Query>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { ApolloConsumer, Mutation } from 'react-apollo'\r\nimport Moment from 'react-moment'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst GET_USER = gql`\r\nquery {\r\n  me {\r\n    id\r\n  }\r\n}`\r\n\r\nconst DELETE_GAME = gql`\r\nmutation DeleteGame($id: Int!) {\r\n  deleteGame(id: $id) {\r\n    result\r\n  }\r\n}`\r\n\r\nexport default class GameCard extends Component {\r\n  state = {\r\n    id: undefined,\r\n    fetch: true\r\n  }\r\n\r\n  setUserId = (id) => this.setState({id, fetch: false}) \r\n\r\n  render() {\r\n    const obj = this.props.obj\r\n    const mode = obj.extended ? 'Extended' : 'Classic'\r\n    const extendedPlayers = obj.extended ? (\r\n      <Fragment>\r\n        As Doctor: {obj.peopleAsDoctor}<br/>\r\n        As Sheriff: {obj.peopleAsSheriff}<br/>\r\n      </Fragment>\r\n    ) : (\r\n      <Fragment />\r\n    )\r\n    \r\n    const delGame = this.state.id === obj.creator.id ? (\r\n      <Mutation mutation={DELETE_GAME}>\r\n        {(deleteGame, { data }) => {\r\n          const f = (e) => {deleteGame({ variables: {id: obj.id } }); this.props.refetch();}\r\n          return (\r\n            <a href=\"#\" onClick={f}>Delete</a>\r\n          )\r\n        }}\r\n      </Mutation>\r\n    ) : (\r\n      <Fragment />\r\n    )\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{obj.name}</span>\r\n          {mode}<br/>\r\n          Players: {obj.players}<br/>\r\n          As Mafia: {obj.peopleAsMafia}<br/>\r\n          {extendedPlayers}\r\n          Creator: {obj.creator.username}<br/>\r\n          Created at: <Moment>{obj.createdAt}</Moment>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <ApolloConsumer>\r\n            {client => {\r\n              if (this.state.fetch) {\r\n                client.query({\r\n                  query: GET_USER\r\n                }).then(d => {\r\n                  this.setUserId(d.data.me.id)\r\n                })\r\n              }\r\n              return (\r\n                <Fragment>\r\n                  <NavLink to={`game/${this.props.obj.id}`}>Join</NavLink>\r\n                  {delGame}\r\n                </Fragment>\r\n              )\r\n            }}\r\n          </ApolloConsumer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Formik, Form } from 'formik'\r\nimport gql from 'graphql-tag'\r\nimport { Query } from 'react-apollo'\r\n\r\nimport MaterializeField from '../MaterializeField'\r\nimport GameCard from '../GameCard'\r\n\r\nconst GAMES = gql`\r\nquery Games($q: String, $first: Int, $skip: Int) {\r\n  games(search: $q, first: $first, skip: $skip) {\r\n    id\r\n    creator {\r\n      id\r\n      username\r\n    }\r\n    name\r\n    players\r\n    peopleAsMafia\r\n    peopleAsDoctor\r\n    peopleAsSheriff\r\n    extended\r\n    createdAt\r\n  }\r\n}`\r\n\r\nexport default class Games extends Component {\r\n  state = {\r\n    q: '',\r\n    first: 10,\r\n    skip: 0,\r\n    page: 1\r\n  }\r\n\r\n  setQuery = (q) => this.setState({q})\r\n\r\n  nextPage = () => this.setState({first: this.state.first + 10, skip: this.state.skip + 10, page: this.state.page + 1})\r\n\r\n  prevPage = () => {\r\n    if (this.state.page > 1) {\r\n      this.setState({first: this.state.first - 10, skip: this.state.skip - 10, page: this.state.page - 1})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"col s8 offset-s2\">\r\n          <Formik\r\n            initialValues={{q: ''}}\r\n            onSubmit={(values, actions) => {\r\n              const {q} = values\r\n              this.setQuery(q)\r\n            }}\r\n            render={({ errors, status, touched, isSubmitting }) => (\r\n              <Form>\r\n                <div className=\"row\">\r\n                  <div className=\"col s8 offset-s2\">\r\n                    <div className=\"row\">\r\n                      <MaterializeField type=\"text\" name=\"q\" component=\"p\" title=\"Search\" prefix=\"search\" />\r\n                    </div>\r\n                    <Query query={GAMES} variables={{q: this.state.q, first: this.state.first, skip: this.state.skip}}>\r\n                      {({ loading, error, data, refetch }) => {\r\n                        if (loading) return (\r\n                          <div className=\"progress\">\r\n                            <div className=\"indeterminate\"></div>\r\n                          </div>\r\n                        )\r\n                        if (error) return (\r\n                          `Error! ${error.message}`\r\n                        )\r\n\r\n                        data = data.games\r\n\r\n                        return <Fragment>\r\n                          <div className=\"row\">\r\n                            <NavLink to='createGame' className='btn'><i className=\"material-icons left\">add</i>Create Game</NavLink>\r\n                            <button className=\"btn\" onClick={() => refetch()}><i className=\"material-icons left\">refresh</i>Refresh</button>\r\n                          </div>\r\n                          {data.map((d, idx) => (\r\n                            <div className=\"row\" key={d.id}>\r\n                              <GameCard obj={d} refetch={refetch} />\r\n                            </div>\r\n                          ))}\r\n                        </Fragment>\r\n                      }}\r\n                    </Query>\r\n                    <div className=\"row\">\r\n                      <ul className=\"pagination center-align\">\r\n                        <li className={this.state.page === 1 ? \"disabled\" : \"enabled\"}><a href=\"#!\" onClick={(e) => this.prevPage()}><i className=\"material-icons\">chevron_left</i></a></li>\r\n                        <li className=\"active\"><a href=\"#!\">{this.state.page}</a></li>\r\n                        <li className=\"waves-effect\"><a href=\"#!\" onClick={(e) => this.nextPage()}><i className=\"material-icons\">chevron_right</i></a></li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport player_hidden_image from '../../images/player_hidden.png';\r\nimport './PlayerCard.css';\r\n\r\nconst videoStyle = {\r\n  maxWidth: '100%',\r\n};\r\n\r\nconst cardContentsStyle = {\r\n  minHeight: '40px',\r\n};\r\n\r\nexport default class PlayerCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.videoRef = React.createRef();\r\n    this.state = {checkPlayerButtonHidden: true, killPlayerButtonHidden: true, voteForPlayerButtonHidden: true};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-contents\" style={cardContentsStyle}>\r\n          <span className=\"player-name\">{this.props.playerName}</span>\r\n          {!this.state.voteForPlayerButtonHidden &&\r\n            <button className=\"btn-floating right waves-effect waves-light red\"><i className=\"material-icons\">priority_high</i></button>\r\n          }\r\n          {!this.state.checkPlayerButtonHidden &&\r\n            <button className=\"btn-floating right waves-effect waves-light red\"><i className=\"material-icons\">search</i></button>\r\n          }\r\n          {!this.state.killPlayerButtonHidden &&\r\n            <button className=\"btn-floating right waves-effect waves-light red\"><i className=\"material-icons\">smoking_rooms</i></button>\r\n          }\r\n        </div>\r\n        <div className=\"container-video\">\r\n          <video id={\"video-\" + this.props.card_id} ref={this.videoRef} style={videoStyle} poster={player_hidden_image} autoPlay></video>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { client } from '../../index.js'\r\nimport PlayerCard from '../elements/PlayerCard'\r\nimport { ClimbingBoxLoader, BarLoader, BeatLoader, BounceLoader,\r\nCircleLoader, ClipLoader, DotLoader, FadeLoader, GridLoader,\r\nHashLoader, MoonLoader, PacmanLoader, PropagateLoader,\r\nPulseLoader, ReactSpinners, RingLoader, RiseLoader,\r\nRotateLoader, ScaleLoader, SyncLoader } from 'react-spinners'\r\n//import {gql} from \"apollo-boost\";\r\nimport { Mutation } from 'react-apollo'\r\n\r\nconst mutation = gql`\r\nmutation CreateGamePlayer($gameId: Int!) {\r\n  createGamePlayer(gameId: $gameId) {\r\n    gamePlayer {\r\n      token\r\n    }\r\n  }\r\n}`\r\n\r\n\r\nconst rowStyle = {\r\n  marginBottom: 0\r\n};\r\n\r\nconst GET_MY_ID_QUERY = gql`\r\nquery {\r\n  me {\r\n    id\r\n  }\r\n}`\r\n\r\n\r\nexport default class Game extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    gameState: 'connecting',\r\n    mutationHasDone: false,\r\n    token: undefined,\r\n    playerNames: undefined,\r\n    playerIds: undefined,\r\n    mafias: undefined\r\n  }\r\n\r\n  socket = undefined\r\n\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    return true\r\n  }\r\n  \r\n  playerId;\r\n  gameId = this.props.match.params.gameId;\r\n\r\n  mediaConstraints = {\r\n    audio: true,\r\n    video: true\r\n  };\r\n\r\n  peerConnections = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.playerCardRefs = {};\r\n    for(let i = 0; i < 10; i++) { \r\n      this.playerCardRefs[i] = { ref: React.createRef() };\r\n    }\r\n\r\n    this.signalingSocket = new WebSocket(`ws://localhost:8000/ws/signaling-socket/?access_token=${localStorage.getItem('token')}`);\r\n\r\n    this.signalingSocket.addEventListener('message', (event) => {\r\n      let msg = JSON.parse(event.data)\r\n      console.log(msg)\r\n      switch(msg.type) {\r\n        case 'player-joined':\r\n          this.videoHandlePlayerJoinedMsg(msg);\r\n          break;\r\n        case 'player-disconnected':\r\n          this.videoHandlePlayerDisconnectedMsg(msg);\r\n          break;\r\n        case 'video-offer':\r\n          this.videoHandleVideoOfferMsg(msg);\r\n          break;\r\n        case 'video-answer':\r\n          this.videoHandleVideoAnswerMsg(msg);\r\n          break;\r\n        case 'new-ice-candidate':\r\n          this.videoHandleNewICECandidateMsg(msg);\r\n          break;\r\n        \r\n        default:\r\n      }\r\n    });\r\n\r\n    this.signalingSocket.addEventListener('open', (event) => {\r\n      client\r\n        .query({\r\n          query: GET_MY_ID_QUERY,\r\n        })\r\n        .then((obj) => { \r\n          this.playerId = parseInt(obj.data.me.id);\r\n\r\n          this.videoSendToServer({\r\n            type: 'player-joined',\r\n            game_id: this.gameId,\r\n            player_id: this.playerId\r\n          });\r\n        });\r\n\r\n      let cardRefs = this.playerCardRefs;\r\n      navigator.mediaDevices.getUserMedia(this.mediaConstraints)\r\n        .then((localStream) => {\r\n          cardRefs[this.playerId].ref.current.videoRef.current.srcObject = localStream;\r\n          cardRefs[this.playerId].ref.current.videoRef.current.muted = true;\r\n        })\r\n        .catch(this.videoHandleGetUserMediaError);\r\n    });\r\n  }\r\n\r\n  videoHandlePlayerJoinedMsg = (msg) => {\r\n    this.videoCreatePeerConnection(msg.player_id);\r\n    navigator.mediaDevices.getUserMedia(this.mediaConstraints)\r\n      .then((localStream) => {\r\n        localStream.getTracks().forEach(track => this.peerConnections[msg.player_id].addTrack(track, localStream));\r\n      })\r\n      .catch(this.videoHandleGetUserMediaError);\r\n  }\r\n\r\n  videoHandlePlayerDisconnectedMsg = (msg) => {\r\n    this.videoEndVideoStreaming(msg.player_id);\r\n  }\r\n\r\n  videoHandleVideoOfferMsg = (msg) => {\r\n    if (this.peerConnections[msg.player_id]) {\r\n      console.error('peerConnection already exists!');\r\n      return;\r\n    }\r\n  \r\n    var localStream = null;\r\n    this.videoCreatePeerConnection(msg.player_id);\r\n    this.peerConnections[msg.player_id].onnegotiationneeded = null;\r\n  \r\n    var desc = new RTCSessionDescription(msg.sdp);\r\n  \r\n    this.peerConnections[msg.player_id].setRemoteDescription(desc).then(() => {\r\n      return navigator.mediaDevices.getUserMedia(this.mediaConstraints);\r\n    })\r\n    .then((stream) => {\r\n      localStream = stream;\r\n      localStream.getTracks().forEach(track => this.peerConnections[msg.player_id].addTrack(track, localStream));\r\n    })\r\n    .then(() => {\r\n      return this.peerConnections[msg.player_id].createAnswer();\r\n    })\r\n    .then((answer) => {\r\n      return this.peerConnections[msg.player_id].setLocalDescription(answer);\r\n    })\r\n    .then(() => {\r\n      this.videoSendToServer({\r\n        type: 'video-answer',\r\n        game_id: msg.game_id,\r\n        player_id: this.playerId,\r\n        target_id: msg.player_id,\r\n        sdp: this.peerConnections[msg.player_id].localDescription\r\n      });\r\n    })\r\n    .catch(this.videoHandleGetUserMediaError);\r\n  }  \r\n\r\n  videoHandleVideoAnswerMsg = (msg) => {\r\n    var desc = new RTCSessionDescription(msg.sdp);\r\n    this.peerConnections[msg.player_id].setRemoteDescription(desc)\r\n      .then(() => {\r\n        console.log('setRemoteDescription(answer) succsess in promise');\r\n      })\r\n      .catch(this.videoHandleError);\r\n  }\r\n\r\n  videoHandleNewICECandidateMsg = (msg) => {\r\n    var candidate = new RTCIceCandidate(msg.candidate);\r\n  \r\n    this.peerConnections[msg.player_id].addIceCandidate(candidate)\r\n      .then(() => {\r\n        console.log('addIceCandidate(candidate) success in promise');\r\n      })\r\n      .catch(this.videoHandleError);\r\n  }\r\n\r\n  videoCreatePeerConnection = (targetId) => {\r\n    console.log('creating new peer');\r\n  \r\n    let peerConnection = new RTCPeerConnection({\r\n        iceServers: [\r\n          {\r\n            urls: 'stun:stun3.l.google.com:19302'\r\n          }\r\n        ]\r\n    });\r\n    \r\n    peerConnection.onicecandidate = (event) => {\r\n      return this.videoHandleICECandidateEvent(event, targetId);\r\n    }\r\n    peerConnection.ontrack = (event) => {\r\n      return this.videoHandleTrackEvent(event, targetId); \r\n    }\r\n    peerConnection.onnegotiationneeded = () => {\r\n      return this.videoHandleNegotiationNeededEvent(targetId);\r\n    }\r\n    \r\n    this.peerConnections[targetId] = peerConnection;\r\n  }\r\n\r\n  videoHandleICECandidateEvent = (event, targetId) => {\r\n    console.log('videoHandleICECandidateEvent triggered')\r\n    if (event.candidate) {\r\n      this.videoSendToServer({\r\n        type: 'new-ice-candidate',\r\n        game_id: this.gameId,\r\n        player_id: this.playerId,\r\n        target_id: targetId,\r\n        candidate: event.candidate\r\n      });\r\n    }\r\n  }\r\n\r\n  videoHandleNegotiationNeededEvent = (targetId) => {\r\n    console.log('videoHandleNegotiationNeededEvent triggered');\r\n    this.peerConnections[targetId].createOffer().then((offer) => {\r\n      return this.peerConnections[targetId].setLocalDescription(offer);\r\n    })\r\n    .then(() => {\r\n      this.videoSendToServer({\r\n        type: 'video-offer',\r\n        game_id: this.gameId,\r\n        player_id: this.playerId,\r\n        target_id: targetId,\r\n        sdp: this.peerConnections[targetId].localDescription\r\n      });\r\n    })\r\n    .catch(this.videoHandleError);\r\n  }\r\n\r\n  videoHandleTrackEvent = (event, playerId) => {\r\n    console.log('videoHandleTrackEvent triggered')\r\n    document.getElementById('video-'.concat(playerId)).srcObject = event.streams[0];\r\n  }\r\n\r\n  videoEndVideoStreaming = (playerId) => {\r\n    let playerVideo = document.getElementById(\"video-\" + playerId);\r\n  \r\n    if (playerVideo.srcObject) {\r\n      playerVideo.srcObject.getTracks().forEach(track => track.stop());\r\n    }\r\n    \r\n    if (playerId != this.playerId) {\r\n      this.peerConnections[playerId].close()\r\n      delete this.peerConnections[playerId];\r\n    }\r\n  }\r\n\r\n  videoSendToServer = (msg) => {\r\n    this.signalingSocket.send(JSON.stringify(msg));\r\n  }\r\n\r\n  videoHandleGetUserMediaError = (error) => {\r\n    switch(error.name) {\r\n      case 'NotFoundError':\r\n        alert('Unable to open your call because no camera and/or microphone were found.');\r\n        break;\r\n      case 'SecurityError':\r\n      case 'PermissionDeniedError':\r\n        break;\r\n      default:\r\n        alert('Error opening your camera and/or microphone: ' + error.message);\r\n        break;\r\n    }\r\n  }\r\n\r\n  videoHandleError = (error) => {\r\n    console.error('Error ' + error.name + ': ' + error.message);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.signalingSocket.readyState === WebSocket.OPEN) {\r\n      this.signalingSocket.onclose = () => {}\r\n      this.signalingSocket.close()\r\n    }\r\n    if (this.socket !== undefined && this.socket.readyState === WebSocket.OPEN) {\r\n      this.socket.onclose = () => {}\r\n      this.socket.close()\r\n    }\r\n    this.videoEndVideoStreaming(this.playerId);\r\n  }\r\n\r\n  testGetPeers = () => {\r\n    console.log(this.peerConnections)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.playerNames === undefined)\r\n    {\r\n      let defaultNamesArray = []\r\n      for (let i = 0; i < 10; i++)\r\n        defaultNamesArray.push('loading')\r\n      this.state.playerNames = defaultNamesArray\r\n      this.state.playerIds = []\r\n    }\r\n    const loaders = [ClimbingBoxLoader, BarLoader, BeatLoader, BounceLoader,\r\n                     CircleLoader, ClipLoader, DotLoader, FadeLoader, GridLoader,\r\n                     HashLoader, MoonLoader, PacmanLoader, PropagateLoader,\r\n                     PulseLoader, ReactSpinners, RingLoader, RiseLoader,\r\n                     RotateLoader, ScaleLoader, SyncLoader]\r\n    const randomLoader = loaders[Math.floor(Math.abs(Math.random() * 10)) % loaders.length]\r\n\r\n    // window.history.pushState(null, null, window.location.href);\r\n    // window.onpopstate = function () {\r\n    //     window.history.go(1);\r\n    // };\r\n\r\n    return (\r\n      <div className='container'>\r\n        <Mutation mutation={mutation}\r\n                  variables={{gameId: this.props.match.params.gameId}}\r\n                  update={(cache, { data }) => {\r\n                    this.setState({\r\n                        gameState: \"waiting players\",\r\n                        token: data.createGamePlayer.gamePlayer.token\r\n                    })\r\n                    if (this.socket === undefined)\r\n                      this.socket = new WebSocket(\"ws://localhost:8000/gameAwait/\");\r\n                    this.socket.onopen = ev => {\r\n                      let message = {\r\n                        type: 'update info',\r\n                        token: this.state.token\r\n                      }\r\n                      this.socket.send(JSON.stringify(message))\r\n                    }\r\n                    this.socket.onmessage = ev => {\r\n                      let data = JSON.parse(ev.data)\r\n                      console.log(data.players)\r\n                      if (data.type === 'update info') {\r\n                        for (let i = 0; i < data.players.length; i++) {\r\n                          this.state.playerNames[i] = data.players[i]\r\n                          this.state.playerIds[i] = data.players_id[i]\r\n                        }\r\n                        for (let i = data.players.length; i < 10; i++)\r\n                          this.state.playerNames[i] = 'loading'\r\n\r\n                        this.setState({}) // to update render\r\n                      } else if (data.type === 'sleep') {\r\n                        // power off all cameras\r\n                        this.setState({gameState: 'Whole city is sleeping... Only mafias still work...'})\r\n                      } else if (data.type === 'wakeup mafia') {\r\n                        // POWER ON players with username in data.players\r\n                        this.setState({gameState: 'mafia vote', mafias: data.players})\r\n                      } else if (data.type === 'wakeup inhabitants') {\r\n                        // POWER ON ALL CONNECTION\r\n                        this.setState({gameState: 'inhabitant vote'})\r\n                      } else if (data.type === 'game over') {\r\n                        // power off all\r\n                        this.setState({gameState: 'YOU LOSE!'})\r\n                      } else if (data.type === 'game win') {\r\n                        // power off all\r\n                        this.setState({gameState: 'YOU WIN!'})\r\n                      } else if (data.type === 'remove player') {\r\n                        // power off player with username data.player\r\n                      } else if (data.type === 'message') {\r\n                        this.setState({gameState: data.message})\r\n                      }\r\n                    }\r\n                  }}\r\n        >\r\n          {(createGamePlayer, {data}) => {\r\n            if (!this.state.mutationHasDone)\r\n            {\r\n              this.setState({mutationHasDone: true})\r\n              createGamePlayer()\r\n            }\r\n            return <div></div> //kostyl but i didnt found better idea\r\n          }}\r\n        </Mutation>\r\n        <div className='row'style={rowStyle} style={rowStyle}>\r\n          <div className='col s3'>\r\n            {this.playerCardRefs[0].ref && <PlayerCard ref={this.playerCardRefs[0].ref} card_id={0} playerName={this.state.playerNames[0]}/>}\r\n          </div>\r\n          <div className='col s3'>\r\n            {this.playerCardRefs[1].ref && <PlayerCard ref={this.playerCardRefs[1].ref} card_id={1} playerName={this.state.playerNames[1]}/>}\r\n          </div>\r\n          <div className='col s3'>\r\n            {this.playerCardRefs[2].ref && <PlayerCard ref={this.playerCardRefs[2].ref} card_id={2} playerName={this.state.playerNames[2]}/>}\r\n          </div>\r\n          <div className='col s3'>\r\n            {this.playerCardRefs[3].ref && <PlayerCard ref={this.playerCardRefs[3].ref} card_id={3} playerName={this.state.playerNames[3]}/>}\r\n          </div>\r\n        </div>\r\n        <div className='row valign-wrapper' style={rowStyle}>\r\n          <div className='col s3'>\r\n            {this.playerCardRefs[9].ref && <PlayerCard ref={this.playerCardRefs[9].ref} card_id={9} playerName={this.state.playerNames[9]}/>}\r\n          </div>\r\n          <div className='col s6'>\r\n            <div className='card center'>\r\n              <span className=\"card-title\">{\r\n                () => {\r\n                  if (this.state.gameState === 'inhabitant vote')\r\n                    return (\r\n                        <form onSubmit={event => {\r\n                          let select = document.getElementById('select')\r\n                          let selectedUser = select.option[select.selectedIndex].value\r\n                          let data = {type: 'inhabitant vote', player: selectedUser}\r\n                          this.socket.send(JSON.stringify(data))\r\n                          return false;\r\n                        }}>\r\n                          <select id='select'>\r\n                            {() => {\r\n                              let result = ''\r\n                              let players = this.state.playerNames\r\n                              for (let player_index = 0; player_index < players.length; player_index++) {\r\n                                result += `<option value=\"${players[player_index]}\">${players[player_index]}</option>`\r\n                              }\r\n                              return result\r\n                            }}\r\n                          </select>\r\n                        </form>\r\n                    )\r\n                  else if (this.state.gameState === 'mafia vote')\r\n                    return (\r\n                        <form onSubmit={event => {\r\n                          let select = document.getElementById('select')\r\n                          let selectedUser = select.option[select.selectedIndex].value\r\n                          let data = {type: 'mafia vote', player: selectedUser}\r\n                          this.socket.send(JSON.stringify(data))\r\n                          return false;\r\n                        }}>\r\n                          <select id='select'>\r\n                            {() => {\r\n                              let result = ''\r\n                              let players = this.state.playerNames\r\n                              let mafias = this.state.mafias\r\n                              for (let player_index = 0; player_index < players.length; player_index++) {\r\n                                let is_mafia = false;\r\n                                for (let mafia_index = 0; mafia_index < mafias.length; mafia_index++)\r\n                                  if (players[player_index] === mafias[mafia_index]) {\r\n                                    is_mafia = true\r\n                                    break\r\n                                  }\r\n                                if (!is_mafia)\r\n                                  result += `<option value=\"${players[player_index]}\">${players[player_index]}</option>`\r\n                              }\r\n                              return result\r\n                            }}\r\n                          </select>\r\n                        </form>\r\n                    )\r\n                  else return this.state.gameState\r\n                }\r\n              }\r\n              </span>\r\n              <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                {React.createElement(randomLoader, {\r\n                  size: 20, sizeUnit: 'px', color:'#1dbc98', loading: this.state.isLoading\r\n                })}\r\n              </div>\r\n              <div className='card-content'>\r\n                <p>Alert</p>\r\n                <p>Info</p>\r\n                <p>Other functionality</p>\r\n                <button className='btn waves-effect waves-light' onClick={this.testGetPeers}>Get peers</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s3\">\r\n            {this.playerCardRefs[4].ref && <PlayerCard ref={this.playerCardRefs[4].ref} card_id={4} playerName={this.state.playerNames[4]}/>}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col s3\">\r\n            {this.playerCardRefs[8].ref && <PlayerCard ref={this.playerCardRefs[8].ref} card_id={8} playerName={this.state.playerNames[8]}/>}\r\n          </div>\r\n          <div className=\"col s3\">\r\n            {this.playerCardRefs[7].ref && <PlayerCard ref={this.playerCardRefs[7].ref} card_id={7} playerName={this.state.playerNames[7]}/>}\r\n          </div>\r\n          <div className=\"col s3\">\r\n            {this.playerCardRefs[6].ref && <PlayerCard ref={this.playerCardRefs[6].ref} card_id={6} playerName={this.state.playerNames[6]}/>}\r\n          </div>\r\n          <div className=\"col s3\">\r\n            {this.playerCardRefs[5].ref && <PlayerCard ref={this.playerCardRefs[5].ref} card_id={5} playerName={this.state.playerNames[5]}/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { Formik, Form, ErrorMessage } from 'formik'\r\nimport gql from 'graphql-tag'\r\nimport { ApolloConsumer, Mutation } from 'react-apollo'\r\nimport * as Yup from 'yup'\r\n\r\nimport M from 'materialize-css/dist/js/materialize'\r\n\r\nimport MaterializeField from '../MaterializeField'\r\n\r\nconst CREATE_GAME = gql`\r\nmutation CreateGame($name: String!, $extended: Boolean!, $cardSet: Int!, $players: Int!, $asMafia: Int!, $asDoctor: Int, $asSheriff: Int) {\r\n  createGame(name: $name, extended: $extended, cardSet: $cardSet, players: $players, asMafia: $asMafia, asDoctor: $asDoctor, asSheriff: $asSheriff) {\r\n    game {\r\n      id\r\n    \tname\r\n    \tcreator {\r\n      \tid\r\n      \tusername\r\n    \t}\r\n    }\r\n  }\r\n}`\r\n\r\nconst GET_CARD_SETS = gql`\r\nquery {\r\n  cardSets {\r\n    id\r\n    name\r\n    extended\r\n  }\r\n}`\r\n\r\nconst GameSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(4, 'Too short')\r\n    .max(255, 'Too long')\r\n    .required('Required'),\r\n  extended: Yup.boolean(),\r\n  cardSet: Yup.string().notOneOf(['', '0'], 'Select Card Set').required('Required'),\r\n  players: Yup.number()\r\n    .min(5, 'Minimum number of people is 5')\r\n    .max(10, 'Maximum number of people is 10')\r\n    .required('Required'),\r\n  asMafia: Yup.number()\r\n    .min(1, 'Minimum number as mafia is 1')\r\n    .max(4, 'Maximum number as mafia is 4')\r\n    .required('Required'),\r\n  asDoctor: Yup.number()\r\n    .min(1, 'Minimum is 1')\r\n    .max(2, 'Maximum is 2'),\r\n  asSheriff: Yup.number()\r\n    .min(1, 'Minimum is 1')\r\n    .max(2, 'Maximum is 2')\r\n})\r\n\r\nexport default class CreateGame extends Component {\r\n  state = {\r\n    cardSets: [],\r\n    fetch: true,\r\n    extended: false\r\n  }\r\n\r\n  setCardSets = (cardSets) => this.setState({cardSets, fetch: false})\r\n\r\n  changeExtended = () => this.setState({extended: !this.state.extended})\r\n\r\n  componentDidUpdate() {\r\n    var elems = document.querySelectorAll('select')\r\n    M.FormSelect.init(elems, {})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"col s8 offset-s2\">\r\n          <Mutation\r\n            mutation={CREATE_GAME}\r\n            update={(cache, { data }) => {\r\n              if (data.createGame.game.id) {\r\n                this.props.history.push('games')\r\n              }\r\n            }}\r\n          >\r\n            {(createGame, { data }) => (\r\n              <ApolloConsumer>\r\n                {client => {\r\n                  if (this.state.fetch) {\r\n                    client.query({\r\n                      query: GET_CARD_SETS\r\n                    }).then(d => {\r\n                      console.log(d.data.cardSets)\r\n                      this.setCardSets(d.data.cardSets)\r\n                    })\r\n                  }\r\n\r\n                  return (\r\n                    <Formik\r\n                      initialValues={{name: '', extended: this.state.extended, cardSet: '0', players: 5, asMafia: 1, asDoctor: 1, asSheriff: 1}}\r\n                      validationSchema={GameSchema}\r\n                      onSubmit={(values, actions) => {\r\n                        values.cardSet = parseInt(values.cardSet)\r\n                        createGame({variables: values})\r\n                      }}\r\n                      render={({ errors, status, touched, isSubmitting, handleSubmit, handleChange, handleBlur, values }) => (\r\n                        <Form>\r\n                          <div className=\"row\">\r\n                            <div className=\"col s8 offset-s2\">\r\n                              <div className=\"row\">\r\n                                <MaterializeField type=\"text\" name=\"name\" component=\"p\" title=\"Name\" />\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                  <div className=\"input-field\">\r\n                                    <label>\r\n                                      <input\r\n                                        name=\"extended\"\r\n                                        type=\"checkbox\"\r\n                                        value={values.extended}\r\n                                        checked={values.extended}\r\n                                        onChange={(e) => {this.changeExtended(); handleChange(e)}}\r\n                                        onBlur={handleBlur}\r\n                                      />\r\n                                      <span>Extended</span>\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                  <div className=\"input-field\">\r\n                                    <select\r\n                                      name=\"cardSet\"\r\n                                      value={values.cardSet}\r\n                                      onChange={handleChange}\r\n                                      onBlur={handleBlur}\r\n                                    >\r\n                                      {[<option key={0} value=\"0\" disabled>Select Card Set</option>, ...this.state.cardSets.filter(cardSet => cardSet.extended === values.extended).map(cardSet => (\r\n                                        <option key={cardSet.id} value={cardSet.id}>{cardSet.name}</option>\r\n                                      ))]}\r\n                                    </select>\r\n                                    <label>Card Set</label>\r\n                                    <ErrorMessage name=\"cardSet\" component=\"p\" />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                  <MaterializeField type=\"number\" name=\"players\" component=\"p\" title=\"Players\" />\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                  <MaterializeField type=\"number\" name=\"asMafia\" component=\"p\" title=\"As Mafia\" />\r\n                                </div>\r\n                              </div>\r\n                              {values.extended ? (\r\n                                <div className=\"row\">\r\n                                  <div className=\"col s6\">\r\n                                    <MaterializeField type=\"number\" name=\"asDoctor\" component=\"p\" title=\"As Doctor\" />\r\n                                  </div>\r\n                                  <div className=\"col s6\">\r\n                                    <MaterializeField type=\"number\" name=\"asSheriff\" component=\"p\" title=\"As Sheriff\" />\r\n                                  </div>\r\n                                </div>\r\n                              ) : (\r\n                                <Fragment />\r\n                              )}\r\n                              <button type=\"submit\" className=\"btn\" disabled={isSubmitting}>Create</button>\r\n                            </div>\r\n                          </div>\r\n                        </Form>\r\n                      )}\r\n                    />\r\n                  )\r\n                }}\r\n              </ApolloConsumer>\r\n            )}\r\n          </Mutation>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport Index from './components/pages/Index'\r\nimport Login from './components/pages/Login'\r\nimport Register from './components/pages/Register'\r\nimport Profile from './components/pages/Profile'\r\nimport Games from './components/pages/Games'\r\nimport Game from './components/pages/Game'\r\nimport CreateGame from './components/pages/CreateGame'\r\n\r\nconst Router = props => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={Index} />\r\n      <Route path='/login' component={Login} />\r\n      <Route path='/reg' component={Register} />\r\n      <Route path='/profile' component={Profile} />\r\n      <Route path='/games' component={Games} />\r\n      <Route path='/game/:gameId' component={Game} />\r\n      <Route path='/createGame' component={CreateGame} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport 'materialize-css/dist/js/materialize'\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\nimport Router from './Router'\r\n\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header>\r\n          <Header />\r\n        </header>\r\n        <main>\r\n          <Router {...this.props} />\r\n        </main>\r\n        <footer className=\"page-footer\">\r\n          <Footer />\r\n        </footer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport ApolloClient from 'apollo-client'\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { ApolloLink, concat } from 'apollo-link'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\n\r\nimport App from './App'\r\n\r\nimport './index.css'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql/',\r\n  credentials: 'same-origin'\r\n})\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  const token = localStorage.getItem('token')\r\n  operation.setContext({\r\n    headers: {\r\n      authorization: token ? `JWT ${token}` : '',\r\n    }\r\n  })\r\n  \r\n  return forward(operation);\r\n})\r\n\r\nexport const client = new ApolloClient({\r\n  link: concat(authMiddleware, httpLink),\r\n  cache: new InMemoryCache(),\r\n  fetchOptions: {\r\n    mode: 'no-cors',\r\n  }\r\n})\r\n\r\nconst app = (\r\n  <ApolloProvider client={client}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </ApolloProvider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}